

To create a Python Flask app with the HTML pages Index and add-user, you can follow the steps below:

1. Install Flask and SQLAlchemy:
   - Open your terminal or command prompt.
   - Run the following commands:
     ```
     pip install flask
     pip install sqlalchemy
     ```

2. Create a new Python file, let's call it `app.py`, and import the necessary modules:
   ```python
   from flask import Flask, render_template, request
   from flask_sqlalchemy import SQLAlchemy
   ```

3. Initialize the Flask app and configure the SQLAlchemy database:
   ```python
   app = Flask(__name__)
   app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///aaldb.db'
   db = SQLAlchemy(app)
   ```

4. Create a User model with the required columns:
   ```python
   class User(db.Model):
       id = db.Column(db.Integer, primary_key=True)
       firstname = db.Column(db.String(50))
       lastname = db.Column(db.String(50))
       email = db.Column(db.String(100))
       role = db.Column(db.String(50))
   ```

5. Create the database tables:
   ```python
   db.create_all()
   ```

6. Define the routes and their corresponding functions:
   ```python
   @app.route('/')
   def index():
       users = User.query.all()
       return render_template('index.html', users=users)

   @app.route('/add-user', methods=['GET', 'POST'])
   def add_user():
       if request.method == 'POST':
           firstname = request.form['firstname']
           lastname = request.form['lastname']
           email = request.form['email']
           role = request.form['role']

           new_user = User(firstname=firstname, lastname=lastname, email=email, role=role)
           db.session.add(new_user)
           db.session.commit()

           return 'User added successfully!'
       return render_template('add-user.html')
   ```

7. Create the HTML templates `index.html` and `add-user.html` in a `templates` folder:
   - `index.html`:
     ```html
     <h1>Users</h1>
     <ul>
     {% for user in users %}
         <li>{{ user.firstname }} {{ user.lastname }} - {{ user.email }} ({{ user.role }})</li>
     {% endfor %}
     </ul>
     ```
